Spring5.3 之后加入了更多的请求路径匹配的实现策略；
以前只支持 AntPathMatcher 策略, 现在提供了 PathPatternParser 策略,默认是PathPatternParser，
并且可以让我们指定到底使用那种策略。

Ant 风格的路径模式语法具有以下规则：
● *：表示任意数量的字符。
● ?：表示任意一个字符。
● **：表示任意数量的目录。
● {}：表示一个命名的模式占位符。
● []：表示字符集合，例如[a-z]表示小写字母。
例如：
● *.html 匹配任意名称，扩展名为.html的文件。
● /folder1/*/*.java 匹配在folder1目录下的任意两级目录下的.java文件。
● /folder2/**/*.jsp 匹配在folder2目录下任意目录深度的.jsp文件。
● /{type}/{id}.html 匹配任意文件名为{id}.html，在任意命名的{type}目录下的文件。
注意：Ant 风格的路径模式语法中的特殊字符需要转义，如：
● 要匹配文件路径中的星号，则需要转义为\\*。
● 要匹配文件路径中的问号，则需要转义为\\?。

● PathPatternParser 在 jmh 基准测试下，有 6~8 倍吞吐量提升，降低 30%~40%空间分配率
● PathPatternParser 兼容 AntPathMatcher语法，并支持更多类型的路径模式
● PathPatternParser  "**" 多段匹配的支持仅允许在模式末尾使用
● 如果路径中间需要有 **，替换成ant风格路径

改变路径匹配策略
spring.mvc.pathmatch.matching-strategy=ant_path_matcher